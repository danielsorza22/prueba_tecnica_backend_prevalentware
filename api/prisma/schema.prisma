generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// Modelos basicos para autenticacion auth0

enum Enum_RoleName {
    Admin
    SuperAdmin
}

model Account {
    id                 String  @id @default(cuid())
    type               String
    provider           String
    providerAccountId  String
    refresh_token      String?
    access_token       String?
    expires_at         Int?
    token_type         String?
    scope              String?
    id_token           String?
    session_state      String?
    oauth_token_secret String?
    oauth_token        String?
    userId             String  @unique
    user               User    @relation(fields: [userId], references: [id])

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    expires      DateTime
    userId       String
    user         User     @relation(fields: [userId], references: [id])
}

model User {
    id             String    @id @default(cuid())
    name           String
    lastName       String?
    email          String    @unique
    emailVerified  DateTime?
    image          String?
    identification String?

    account  Account?
    sessions Session[]

    role   Role   @relation(fields: [roleId], references: [id])
    roleId String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Modelos ejemplo para creacion de dataLoaders
model Role {
    id   String        @id @default(cuid())
    name Enum_RoleName @unique

    users User[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
